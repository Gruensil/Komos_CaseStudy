{
  "_args": [
    [
      {
        "raw": "responsive-directives-angular2@^0.3.0",
        "scope": null,
        "escapedName": "responsive-directives-angular2",
        "name": "responsive-directives-angular2",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "C:\\Users\\Caplonk\\Desktop\\BA\\Implementation\\Komos_CaseStudy\\gen"
    ]
  ],
  "_from": "responsive-directives-angular2@>=0.3.0 <0.4.0",
  "_id": "responsive-directives-angular2@0.3.9",
  "_inCache": true,
  "_location": "/responsive-directives-angular2",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/responsive-directives-angular2-0.3.9.tgz_1472066617787_0.2548825282137841"
  },
  "_npmUser": {
    "name": "manucutillas",
    "email": "manucutillas@outlook.com"
  },
  "_npmVersion": "3.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "responsive-directives-angular2@^0.3.0",
    "scope": null,
    "escapedName": "responsive-directives-angular2",
    "name": "responsive-directives-angular2",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/responsive-directives-angular2/-/responsive-directives-angular2-0.3.9.tgz",
  "_shasum": "fcde028ae13bdc38f12e02a3e8808d8d787489e7",
  "_shrinkwrap": null,
  "_spec": "responsive-directives-angular2@^0.3.0",
  "_where": "C:\\Users\\Caplonk\\Desktop\\BA\\Implementation\\Komos_CaseStudy\\gen",
  "author": {
    "name": "Manu Cutillas",
    "email": "manucutillas@outlook.com",
    "url": "https://kalypso.agency/"
  },
  "bugs": {
    "url": "https://github.com/ManuCutillas/responsive-directives-angular2/issues"
  },
  "contributors": [
    {
      "name": "Christophe HOARAU",
      "url": "https://github.com/no-more"
    },
    {
      "name": "Kamil BreguÅ‚a",
      "url": "https://github.com/mik-laj"
    },
    {
      "name": "Janne Julkunen",
      "url": "https://github.com/sconix"
    },
    {
      "name": "phransyz",
      "url": "https://github.com/phransyz"
    }
  ],
  "dependencies": {},
  "description": "Superset of RESPONSIVE DIRECTIVES to show or hide items according to the size of the device screen and another features in Angular 2",
  "devDependencies": {
    "@angular/core": "^2.0.0-rc.4",
    "es6-promise": "^3.2.1",
    "es6-shim": "^0.35.1",
    "rxjs": "^5.0.0-beta.9",
    "typescript": "^1.8.10"
  },
  "directories": {},
  "dist": {
    "shasum": "fcde028ae13bdc38f12e02a3e8808d8d787489e7",
    "tarball": "https://registry.npmjs.org/responsive-directives-angular2/-/responsive-directives-angular2-0.3.9.tgz"
  },
  "files": [
    "index.d.ts",
    "index.js",
    "config/const.d.ts",
    "config/const.js",
    "config/interfaces.d.ts",
    "config/interfaces.js",
    "config/config.d.ts",
    "config/config.js",
    "config/responsive-base.d.ts",
    "config/responsive-base.js",
    "bootstrap/bootstrap-directives.d.ts",
    "bootstrap/bootstrap-directives.js",
    "browsers/browsers-directives.d.ts",
    "browsers/browsers-directives.js",
    "custom-sizes/custom-sizes-directives.d.ts",
    "custom-sizes/custom-sizes-directives.js",
    "devices/devices-directives.d.ts",
    "devices/devices-directives.js",
    "pixelratio/pixelratio-directives.d.ts",
    "pixelratio/pixelratio-directives.js",
    "responsive/responsive.d.ts",
    "responsive/responsive.js",
    "responsive-window/responsive-window.d.ts",
    "responsive-window/responsive-window.js",
    "useragent/useragent.d.ts",
    "useragent/useragent.js"
  ],
  "homepage": "https://github.com/ManuCutillas/responsive-directives-angular2",
  "keywords": [
    "angular",
    "angular2",
    "ng2",
    "responsive",
    "bootstrap",
    "detect",
    "mobile",
    "tablet",
    "device",
    "devices",
    "screen",
    "typescript",
    "directive",
    "retina",
    "browsers",
    "os",
    "directives"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "manucutillas",
      "email": "manucutillas@outlook.com"
    }
  ],
  "name": "responsive-directives-angular2",
  "optionalDependencies": {},
  "readme": "\n# Introduction\nSuperset of **RESPONSIVE DIRECTIVES** to show or hide items according to the size of the device screen and another features in Angular 2\n\n`RESPONSIVE_DIRECTIVES` provides the following features:\n - Directives detecting states according to standard measures in BOOTSTRAP: xs / sm / md / lg / xl\n - Directives that detect four states according to the real type of device: mobile / tablet / desktop / smartTv\n - Custom sizes detector.\n - Show and hide options.\n - Custom breaking points.\n - Debounce checking interval (default 100ms).\n - Browsers Detect: Chrome / Safari / Firefox / IE / Opera\n - Internet Explorer Versions Detect : IE 9 / IE 10 / IE 11 / IE +12\n - New standard devices: iPhone, iPad, Android Mobile, Android Tablet, Windows Phone.\n - Device orientation detect: portrait, landscape.\n - Pixel ratio detect : 1x / Retina / 4k.\n - Directives Info: DeviceInfo, OrientationInfo, ResponsiveSizeInfo, PixelRatioInfo. \n - Directive: responsive - Detection of multiple functions at once.\n - Directives: DeviceStandardInfo, BrowserInfo, IeInfo.\n - Feature Responsive Directive - Boolean Events Emitter on change state:\n - Feature responsive-window : Capture the size of the parent element to show or hide fill elements. If the parent responsive size is x show or hide.\n - ** NEW ** FEATURE : UserAgent information directive: Get te device, browser, os version and more from the user agent navigator in one event object. \n   \n   Example: \n   \n    ```\n    <userAgentInfo (info)=\"thisUserAgent($event)\"></userAgentInfo>\n    ```\n\n - Written for the latest release of Angular 2 in typescript.\n \n# How to start\n \n1. installing the package via npm \n     ```\n     npm i responsive-directives-angular2 --save\n     ```\n\n2. bootstrap the service\n    \n   * with default breaking points\n   \n    ```\n    import { ResponsiveState } from 'responsive-directives-angular2';\n    ...\n    bootstrap(App, [ResponsiveState]);\n    ```\n\n    * with custom Configuration\n      \n    ```\n    import { ResponsiveState, ResponsiveConfig, ResponsiveConfigInterface } from 'responsive-directives-angular2';\n    ...\n    let config: ResponsiveConfigInterface = {\n        breakPoints: {\n                xs: {max: 600},\n                sm: {min: 601, max: 959},\n                md: {min: 960, max: 1279},\n                lg: {min: 1280, max: 1919},\n                xl: {min: 1920}\n        },\n        debounceTime: 100 // allow to debounce checking timer\n    };\n    ...\n    bootstrap(App,\n    [\n        {\n            provide: ResponsiveConfig,\n            useFactory: () => new ResponsiveConfig(config)\n        },\n        ResponsiveState\n    ]);\n     ```\n\n \n3.DIRECTIVES:\n\n   1. Add all Directives to **Globally** use\n      \n      - In your init App Class add All **RESPONSIVE_DIRECTIVES** to the global directives core of Angular 2\n      \n      ```\n      import {provide, PLATFORM_DIRECTIVES} from '@angular/core';\n      import {ResponsiveState, ResponsiveConfig, RESPONSIVE_DIRECTIVES} from 'responsive-directives-angular2';\n      ...\n      bootstrap(App, [\n             ResponsiveState,\n             provide(PLATFORM_DIRECTIVES, { useValue: [RESPONSIVE_DIRECTIVES], multi: true})\n             ]);\n      ```\n      \n      * In your component to import the RESPONSIVE_DIRECTIVES only need import: \n     \n      ```\n      import {CORE_DIRECTIVES} from '@angular/common';\n      ```\n      \n      And use RESPONSIVE DIRECTIVES:\n      \n      ```\n      @Component({\n         selector: 'my-component',\n         template: '\n              <p *showItStandard=\"['iphone','ipad']\">I'll show you if I'm a iPhone or ipad device.</p>\n              <p *isIphone>I'll show you if I'm a iPhone device.</p>\n              <p *isChrome>I'll show you if I'm a chrome browser.</p>\n              <p *xl>I'll show you if I'm a xl screen size.</p>\n              <p *lg>I'll show you if I'm a lg screen size.</p>\n              <p *md>I'll show you if I'm a md screen size.</p>\n              <p *sm>I'll show you if I'm a sm screen size.</p>\n              <p *xs>I'll show you if I'm a xs screen size.</p>\n         ',\n         directives: [CORE_DIRECTIVES]\n       })\n      ```\n \n4. ALL RESPONSIVE DIRECTIVES OPTIONS \n\n      * Responsive Window directive: Capture the size of the parent element to show or hide fill elements. If the parent responsive size is x show or hide.\n        \n          ```\n          <div [responsive-window]=\"'parent'\">\n               <p *responsive=\"{ sizes:{  window: 'parent', min:900, max:1400} }\"></p>\n          </div>\n          ```\n    \n    1. * New Detection of multiple functions at once.\n    \n           ```\n           All combinations = *responsive=\"{\n                              bootstrap: ['xl,lg,md,sm,xs'],\n                              browser: ['chrome','firefox','ie','safari', 'opera'],\n                              ie:['ie 9','ie 10','ie 11','ie +12'],\n                              pixelratio:['1x','retina','4k'],\n                              standard:['iphone','ipad','android mobile','android tablet','windows phone'],\n                              orientation:['landscape','portrait'],\n                              device: ['mobile','tablet','smarttv','desktop'],\n                              sizes:{min:900,max:1400}\n          }\n          ```\n          \n          *Example in component\n          \n          ```\n          @Component({\n           selector: 'my-component',\n           template: '\n                 <p  *responsive=\"{\n                                 bootstrap: 'lg',\n                                 browser: ['chrome','firefox'],\n                                 pixelratio:'1x',\n                                 orientation:'landscape',\n                                 device: 'desktop',\n                                 sizes:{min:900,max:1400}\n                   }\">I'll show you if all the options are true.</p>\n\n                    <template  [responsive]=\"{\n                                 bootstrap: 'lg',\n                                 browser: ['chrome','firefox'],\n                                 pixelratio:'1x',\n                                 orientation:'landscape',\n                                 device: 'desktop',\n                                 sizes:{min:900,max:1400}\n                   }\" (changes)=\"miMethod($event)\">I'll show you if all the options are true & listen events changes.</template>\n                   \n            ',\n            directives: [CORE_DIRECTIVES]\n         })\n         ```\n    2. One function detect\n       * With Bootstrap Screen sizes\n   \n        ```\n        @Component({\n            selector: 'my-component',\n            template: '\n                <p *xl>I'll show you if I'm a xl screen size.</p>\n                <p *lg>I'll show you if I'm a lg screen size.</p>\n                <p *md>I'll show you if I'm a md screen size.</p>\n                <p *sm>I'll show you if I'm a sm screen size.</p>\n                <p *xs>I'll show you if I'm a xs screen size.</p>\n                ',\n            directives: [CORE_DIRECTIVES]\n            })\n        ```\n   \n        * With multiple combinations of bootstrap screen sizes and show / hide options\n          - Strings Multiple combinations = \"['xs','sm','md','lg','xl']\"\n\n        ```\n        @Component({\n            selector: 'my-component',\n            template: '\n                <p *showItBootstrap=\"['md','xs']\">I'll show you only in md and xs screen sizes.</p>\n                <p *hideItBootstrap=\"['lg','sm']\">I'll hide you only in lg and sm screen sizes.</p>',\n            directives: [CORE_DIRECTIVES]\n        })\n        ```\n   \n        * With Devices Screen sizes\n  \n        ```\n        @Component({\n               selector: 'my-component',\n               template: '\n               <p *isSmartTv>I'll show you if I'm a smartTv device.</p>\n               <p *isDesktop>I'll show you if I'm a desktop device.</p>\n               <p *isTablet>I'll show you if I'm a tablet device.</p>\n               <p *isMobile>I'll show you if I'm a mobile device.</p>\n               ',\n              directives: [CORE_DIRECTIVES]\n            })\n        ```\n     \n        * With multiple devices detect combinations: show / hide options.\n          - Strings Multiple combinations = \"['mobile','tablet','smarttv','desktop']\"\n        ```\n        @Component({\n             selector: 'my-component',\n             template: '\n               <p *showItDevice=\"['mobile','tablet']\">I'll show you if I'm a tablet or a mobile device.</p>\n               <p *hideItDevice=\"['mobile','tablet','desktop']\">I'll hide you if I'm a desktop / tablet or mobile device.</p>',\n             directives: [CORE_DIRECTIVES]\n        })\n        ```\n      \n        * With Standard Devices detect\n    \n        ```\n           @Component({\n              selector: 'my-component',\n              template: '\n                  <p *isIphone>I'll show you if I'm a iPhone device.</p>\n                  <p *isIpad>I'll show you if I'm a iPad device.</p>\n                  <p *isAndroidMobile>I'll show you if I'm a android mobile device.</p>\n                  <p *isAndroidTablet>I'll show you if I'm a android tablet device.</p>\n                  <p *isWindowsPhone>I'll show you if I'm a windows phone mobile device.</p>',\n              directives: [CORE_DIRECTIVES]\n            })\n        ```\n     \n        * With multiple devices detect combinations: show / hide options.\n          - Strings Multiple combinations = \"['iphone','ipad','android mobile','android tablet','windows phone']\"\n      \n        ```\n        @Component({\n             selector: 'my-component',\n             template: '\n                <p *showItStandard=\"['android mobile','windows phone']\">I'll show you if I'm a android mobile or a windows phone device.</p>\n                <p *hideItStandard=\"['iphone','ipad']\">I'll hide you if I'm a iPad or a iPhone device.</p>',\n             directives: [CORE_DIRECTIVES]\n        })\n        ```\n      \n        * With orientation device\n        ```\n        @Component({\n            selector: 'my-component',\n            template: '\n               <p *isPortrait>I'll show you if I'm a portrait state.</p>\n               <p *isLandscape>I'll show you if I'm a landscape state.</p>\n            ',\n            directives: [CORE_DIRECTIVES]\n        })\n        ```\n      \n        * With custom sizes and show / hide options\n \n        ```\n        @Component({\n             selector: 'my-component',\n             template: '\n                <p *showItSizes=\"{min:955,max:1057}\">I'll show you if I have a width between the min and max.</p>\n                <p *hideItSizes=\"{min:360,max:768}\">It is hidden if I have a width between the min and max.</p>\n             ',\n             directives: [CORE_DIRECTIVES]\n        })\n        ```\n     \n        * With browser detection.\n      \n        ```\n        @Component({\n            selector: 'my-component',\n            template: '\n               <p *isChrome>I'll show you if I'm a Chrome Browser.</p>\n               <p *isFirefox>I'll show you if I'm a Firefox Browser.</p>\n               <p *isSafari>I'll show you if I'm a Safari Browser.</p>\n               <p *isOpera>I'll show you if I'm a Opera Browser.</p>\n               <p *isIE>I'll show you if I'm a Internet Explorer Browser.</p>\n            ',\n            directives: [CORE_DIRECTIVES]\n        })\n        ```\n        * With multiple browsers detect combinations: show / hide options.\n          - Strings Multiple combinations = \"['chrome','firefox','ie','safari', 'opera']\"\n        ```\n        @Component({\n           selector: 'my-component',\n           template: '\n             <p *showItBrowser=\"['ie','opera']\">I'll show you if I'm a IE or Opera Browser.</p>\n             <p *hideItBrowser=\"['chrome','firefox','safari']\">I'll hide you if I'm a Chrome, Firefox or Safari Browser.</p>',\n            directives: [CORE_DIRECTIVES]\n        })\n        ```\n        * With Internet Explorer Version detection.\n      \n        ```\n        @Component({\n           selector: 'my-component',\n           template: '\n              <p *isIE9>I'll show you if I'm a Internet Explorer 9.</p>\n              <p *isIE10>I'll show you if I'm a Internet Explorer 10.</p>\n              <p *isIE11>I'll show you if I'm a Internet Explorer 11.</p>\n              <p *isIE12>I'll show you if I'm a Internet Explorer 12.</p>',\n            directives: [CORE_DIRECTIVES]\n        })\n        ```\n      \n        * With multiple Internet Explorer version detect: show / hide options.\n          - Strings Multiple combinations = \"['ie 9','ie 10','ie 11','ie +12']\"\n        ```\n        @Component({\n           selector: 'my-component',\n           template: '\n             <p *showIEVersion=\"['ie 11','ie +12']\">I'll show you if I'm a IE 11 browser or IE 12</p>\n             <p *hideIEVersion=\"['ie 9','ie 10']\">I'll hide you if I'm IE 9 browser or IE 10.</p>\n            ',\n            directives: [CORE_DIRECTIVES]\n        })\n        ```\n        * With pixel ratio detect:\n        ```\n          @Component({\n            selector: 'my-component',\n            template: '\n                <p *is1xPixel>I'll show you if I'm a 1x screen.</p>\n                <p *isRetina>I'll show you if I'm a retina screen.</p>\n                <p *is4k>I'll show you if I'm a 4k screen.</p>\n            ',\n            directives: [CORE_DIRECTIVES]\n          })\n        ```\n      \n      \n# NEXT STEPS \n- Refactor to more simple code and easy to maintain. Less specific directives.\n- Work in demo page\n- Directive css classes:\n```\n<h1 *responsive-css=\"{\n         bootstrap: {xl: \"micssclassxl\", lg:\"micssclasslg\"},\n         orientation:{landscape:\"micssclasslandscape\"}\n        }\"></h1>\n\n```\n- Webp images browser compatibility: \n```\n<img *webp=\"{webp:image.webp, not:image.jpg\", lazyload:true}  alt=\"awesome directive\">\n```\n\n- animations show/hide in directives\n- Desktop OS\n\n# Contributors\n * ManuCutillas \n * Christophe HOARAU\n * Kamil BreguÅ‚a\n * Janne Julkunen\n\n# License\n\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ManuCutillas/responsive-directives-angular2.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "typings": "index.d.ts",
  "version": "0.3.9"
}
